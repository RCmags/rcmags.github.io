I"“0<h1 id="introduction-to-concept">Introduction to concept</h1>

<p>Helicopters are naturally unstable aircraft. Without a system to augment their stability they will inevitably spiral towards the ground. Thankfully, theres a few ways to enhance their stability. A classic approach is to use a heavy bar placed at an angle relative to the rotor blades. Such a 
system is known as a flybar, stabilizer-bar, or mechanical gyro.</p>

<p><img src="https://www.rchelicopterfun.com/images/HillerHead500pics.gif" alt="image" />
<a href="">See: Bell-Hiller mixing</a></p>

<p>This system works by exploiting the angular momentum of the bar. When disturbed, the bar will tend to stay rotating about its current plane. This ‚Äúresistance‚Äù to changes in orientation can fed to the rotor blades to damp the rotation. There are many examples of this stabilization system, be it in large manned helicopters or in small radio-controlled models. Here is a video of what the bar‚Äôs motion looks like on a small rc-helicopter:</p>

<p><a href="https://youtu.be/1fi3qSU-d1o"><img src="https://img.youtube.com/vi/1fi3qSU-d1o/hqdefault.jpg" alt="video" /></a></p>

<p>For helicopters with more than two blades, the bar transforms into a star-shaped object or a ring.</p>

<p><img src="https://www.aviastar.org/foto/lok_xh-51.gif" alt="image" />
<a href="https://www.aviastar.org/helicopters_eng/lok_xh-51.php">See: Lockheed XH-51</a></p>

<p><img src="https://www.aviastar.org/foto/lok_cl-475.gif" alt="image" />
<a href="https://sites.google.com/site/stingrayslistofrotorcraft/lockheed-cl-475">See: Lockheed CL-475</a></p>

<p>While this system works, it comes at the cost of increased mechanical complexity. One can side-step this issue by using electronics to provide analogous control inputs. This greatly simplifies the rotor head but it transfers the complexity to an electronic circuit. With the onset of cheap microcontrollers, this complexity can be abstracted away and emphasis can be placed on the control algorithm.</p>

<h1 id="project-overview">Project overview</h1>

<p>This project concerns itself with the development of a simple and lightweight flight controller for an RC helicopter. To keep things simple, it will use an <a href="https://store.arduino.cc/products/arduino-nano">Arduino Nano</a> as a development board. It only weighs around 5 grams and is just a few centimeters in length so its an ideal platform. It will also use the <a href="https://create.arduino.cc/projecthub/CiferTech/what-is-mpu6050-b3b178">MPU-6050 gyroscope/accelerometer</a> to measure the state of the aircraft. This sensor is ubiquous and inexpensive.</p>

<h1 id="stabilization-algorithm">Stabilization Algorithm</h1>

<p>The pitch and roll axes of the helicopter can be stabilized by means of two <a href="https://en.wikipedia.org/wiki/PID_controller">PID Controllers</a>. The angular velocity, as measured by a gyroscope, acts as the proportional term of the control loops. By taking time integral of this value, one obtains the angular deflection of the aircraft. Hence, the proportional term will act like a viscous damper, while the integral term will act like a spring. 
The derivative term would represent the angular acceleration of the aircraft, although in practice may be used to smoothen in the proportional term.</p>

<p><img src="https://cdn.instrumentationtools.com/wp-content/uploads/2018/01/PID-Controller-Responses-to-Two-momentary-step-inputs.png" alt="image" /></p>

<p>The yaw axis is different as it is affected by the torque generated by the rotor, and this in turn depends on the configuration of the helicopter. For an aircraft with a tail rotor, the yaw axis can use a PID controller along with a counter-torque term that increases with throttle. This is known as <a href="https://helihack.co.uk/revomixing">revo mixing</a>.</p>

<p>These corrections can improve the short-term stability of a helicopter, but their effect on long-term stability is less clear. Nonetheless, it is not critical that the aircraft finds an upright attitude on its own. It can still be unstable so long it occurs slowly. This way the pilot can provide nessesary corrections and the helicopter can remain aloft.</p>

<h1 id="design-iterations">Design iterations</h1>
<p><strong>Iteration 1:</strong><br />
The first version of the helicopter did not have augmented stability. Rather, the focus was on building an aircraft capable of flight and then improving its stability electronically. To this end, the aircraft used very heavy tip weights at the ends of the blades to dampen its rotation. While this worked, it caused the pitch and roll control to have a large delay. This slow response was not very detrimental in high-speed flight, but it did make the aircraft challenging to fly in a hover. Moreover, the tip weights did not enhance the long-term stability of the helicopter. All they did was slow down the motion so that a person could correct the instability.</p>

<p><a href="https://youtu.be/z77q4AkcPiY"><img src="https://img.youtube.com/vi/z77q4AkcPiY/hqdefault.jpg" alt="video" /></a></p>
<p align="center"> Video 1. Passive stability</p>

<p><strong>Iteration 2:</strong><br />
The second iteration of the controller focused on implementing the basic functions needed for the device to work. These were divided into three categories:</p>
<ul>
  <li>The PWM signals sent by the receiver could be decoded accurately and without delay.</li>
  <li>Information from the gyroscope could be retrieved and calibrated consistently.</li>
  <li>Each axis had a corresponding PID controller that combined the receiver and gyroscope signals.</li>
</ul>

<p>While these functions were programmed succesfully, in practice it became evident that vibrations were a serious problem. The gyroscope was sensitive to the slightest disturbances, so any vibrations were measured by the sensor. As the PID controller amplified these signals, the noise would cause the controls of the helicopter to jitter. This made it impossible to make the gains large enough to achieve stable flight, as vibrations overshadowed the slower rotation of the vehicle.</p>

<p>To overcome this problem, a <a href="http://www.tsdconseil.fr/tutos/tuto-iir1-en.pdf">simple first order low pass filter</a> was used to suppress the vibration noise. While this helped, it did not provide sufficient suppression. A straight forward, albeit naive, solution was to <a href="https://2n3904blog.com/cascading-single-pole-filters/">cascade multiple 1rst order filters</a>. This increased the noise suppression but came at the cost of a larger response delay.</p>

<p><img src="https://wiki.analog.com/_media/university/courses/alm1k/circuits1/cascade_rc_sim.png?w=600&amp;tok=694820" alt="image" />
<a href="https://wiki.analog.com/university/labs/cascaded_rc_adalm2000">See: Cascaded filters</a></p>

<p>Unfortunately, this lag caused the PID controller to become unstable as they would not react in synch with the aircraft. This was especially noticeable with the proportional term. Therefore, tuning the filters became a compromise between noise supression and PID stability. After a lot tweaking it was possible to obtain a compromise between filter gain and PID gains. While it worked, the results were generally unsatisfactory as it left the helicopter marginally stable.</p>

<p><img src="/img/heli_controller/heli-v2-wires.JPG" alt="image" /></p>
<p align="center">Helicopter with Arduino nano and MPU-6050 gyro</p>

<p><a href="https://youtu.be/qZ7qUPAXkvc"><img src="https://img.youtube.com/vi/qZ7qUPAXkvc/hqdefault.jpg" alt="video" /></a></p>
<p align="center"> Video 2. Cascaded 1rst order filters</p>

<p><strong>Iteration 3:</strong><br />
The third iteration focused on improving the low pass filter. It was critical to increase the filter order without increasing the delay. A digital <a href="https://en.wikipedia.org/wiki/Infinite_impulse_response">infinite impulse response filter</a> was a simple way to achieve this. These filters are nothing more than the <a href="https://ccrma.stanford.edu/~jos/filters/Difference_Equation.html">sum of past signal values multiplied by coefficients</a>. Since the coefficients are hard to calculate, the <a href="https://web.archive.org/web/20201112004255/http://www.iowahills.com/5FIRFiltersPage.html">Iowa Hills IIR filter designer</a> was used to find the values. The coefficients were then copied into the arduino code. Since the code used arrays to store the coefficients and signal values, it was trivial to try out different configurations.</p>

<p>The filter performed best when configured as a <a href="https://web.archive.org/web/20200706034508/http://www.iowahills.com/IIRChebyshevFilters.html">Chebychev filter</a>. This provided the best compromise between noise suppression and reponse delay. The step response was very underdamped but it didn‚Äôt seem to matter. Since the helicopter rotated slowly and smoothly, the ringing was too small to be noticeable.</p>

<p><img src="https://build.openmodelica.org/Documentation/Modelica_LinearSystems2%202.3.2/Resources/Images/LowPassOrder4FiltersStepResponse.png" alt="image" /></p>

<p>Whatever the IIR configuration, the results were much better than with cascaded 1rst order filters. The noise suppression was stronger and the signal delay was lower. This allowed the PID gains to increase and made aircraft much more stable and easier to fly.</p>

<p><a href="https://youtu.be/zrrgVdPAhFI"><img src="https://img.youtube.com/vi/zrrgVdPAhFI/hqdefault.jpg" alt="video" /></a></p>
<p align="center"> Video 3. Infinite Impulse Reponse filter</p>

<p><strong>Iteration 4:</strong><br />
The forth iteration removed the IIR filter and enabled the <a href="https://deepbluembedded.com/mpu6050-with-microchip-pic-accelerometer-gyroscope-interfacing-with-pic/">in-built low-pass filter of the MPU-6050</a>. This required configuring specific <a href="https://stackoverflow.com/questions/45655256/activting-low-pass-filter-on-mpu6050#45655539">registers</a>. It was trivial since this was already needed for the gyro to communicate with the arduino. At it‚Äôs lowest setting the filter performed better than any of the hand-coded filters. Like before, this allowed the PID gains to increase and improved stability.</p>

<p>To complement the filter, the helicopter was adjusted to reduce mechanical vibrations. Rubber grommets were added to the control linkages to remove slop, and a skid was added to the tail boom to prevent vibration. This last tweak is subtle as it worked by increasing the moment of inertia of the entire tail boom. This changed the <a href="http://facstaff.cbu.edu/~pshiue/Courses/ME318/Notes/Lecture17.pdf">resonant frequency</a> of the boom and shifted it past the frequencies caused by the tail motor. As a result, the amplitude of the vibrations were greatly reduced.</p>

<p><a href="https://youtu.be/nHYoC72DZKo"><img src="https://img.youtube.com/vi/nHYoC72DZKo/hqdefault.jpg" alt="video" /></a></p>
<p align="center"> Video 4. Inbuilt low-pass filter</p>

<p>Below is the third version of the helicopter along with improved flight controller:</p>

<p><img src="https://raw.githubusercontent.com/RCmags/HeliFlightController/main//example_pictures/front_view_res.JPG" alt="image" /></p>
<p align="center">Overview of the helicopter</p>

<p><img src="https://raw.githubusercontent.com/RCmags/HeliFlightController/main//example_pictures/arduino_view_res.JPG" alt="image" /></p>
<p align="center">Closeup of the flight controller</p>

<p><img src="/img/heli_controller/main_rotor.JPG" alt="image" /></p>
<p align="center">Rotor with rubber grommets</p>

<p><img src="/img/heli_controller/tail_rotor.JPG" alt="image" /></p>
<p align="center">Tail rotor and heavy skid</p>

<h1 id="arduino-code">Arduino Code</h1>
<p>The code was designed to receive 4 PWM inputs from an RC receiver operating in MODE 2 and output 3 PWM signals. Two signals go to the cyclic servos and the third goes to a tail-servo or a speed controller. Since it is assumed only two servo motors are used for controlling the rotor, only a <a href="https://www.rchelicopterfun.com/ccpm.html">90-degree swashplate</a> is supported. See the schematic for the tail-motor variant of the required circuit:</p>

<p><img src="https://raw.githubusercontent.com/RCmags/HeliFlightController/main/heli_flight_control_schem.png" alt="image" /></p>

<p><strong>Github Repo</strong>:
<a href="https://github.com/RCmags/HeliFlightController">HeliFlightController</a></p>
:ET